/////////////////////////////////////////////////////////////////////////////////////////
//
// File name 	: CTstCaseForThread.cpp
// Version 		: 1.0.0.0
// Brief 		: 
// Author 		: v.m.
// Create time 	: 16/3/2016 15:23:31
// Modify time 	: 16/3/2016 15:23:31
// Note 		:
//
/////////////////////////////////////////////////////////////////////////////////////////
//
// Copyright : this file is copyright by Julong Co.LTD
//
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// include file
#include <iostream>
#include "CTstCaseForThread.h"
#include <CommInc.h>

/////////////////////////////////////////////////////////////////////////////////////////
//
// class define : CTstThread
//        Notes : ## add class brief here #
//
/////////////////////////////////////////////////////////////////////////////////////////
class CTstThread : public CThread
{
/////////////////////////////////////////////////////////////////////////////////////////
// Construct & Destruct :
public:
	CTstThread(){};		            // Construct define
	virtual ~CTstThread(){};          // Destruct define

public:
    virtual int Run( )
    {
        for ( int i=0; i< 100; i++ )
        {
            std::cout << "This is a test run for thread!" << std::endl;

            Sleep( 1000 );
        } // End of for( ...

        return 0;
    };

}; // End of class CTstThread
/////////////////////////////////////////////////////////////////////////////////////////

CTstThread gThread;

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : OnExcute
// Full name : CTstCaseForThread::OnExcute
// Access    : virtual public 
// Brief     : 
// Parameter : const stCmd& stuCmd
// Return    : void
// Notes     : 
void CTstCaseForThread::OnExcute(const stCmd& stuCmd)
{
    std::cout << "This is function of thread!" << std::endl;
    
    gThread.Start();
} // End of function OnExcute(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// End of file CTstCaseForThread.cpp
/////////////////////////////////////////////////////////////////////////////////////////