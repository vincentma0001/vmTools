/////////////////////////////////////////////////////////////////////////////////////////
//
// File name 	: main.cpp
// Version 		: Version
// Brief 		: 
// Author 		: Author
// Create time 	: 23/6/2017 8:25:06
// Modify time 	: 23/6/2017 8:25:06
// Note 		:
//
/////////////////////////////////////////////////////////////////////////////////////////
//
// Copyright : this file is copyright by Julong Co. LTD
//
/////////////////////////////////////////////////////////////////////////////////////////



/////////////////////////////////////////////////////////////////////////////////////////
// include file
#include <iostream>
#include <vmLogger/vmLogger.h>

/////////////////////////////////////////////////////////////////////////////////////////
// macro define

/////////////////////////////////////////////////////////////////////////////////////////
// using namespace

/////////////////////////////////////////////////////////////////////////////////////////
// class release 

/////////////////////////////////////////////////////////////////////////////////////////
// Todo : add application
void main(void)
{
	vm::vmLogger::Initialize("./log0.cfg");

	vm::vmLogger root("root");
	root.debug("this is a debug msg");
	root.warn("this is a warn msg");
	root.info("this is a info msg");
	root.error("this is a error msg");

	vm::vmLogger sample("sample");
	sample.debug("this is a debug msg for sample");
	sample.warn("this is a warn msg for sample");
	sample.info("this is a info msg for sample");
	sample.error("this is a error msg for sample");

/////////////////////////////////////////////////////////////////////////////////////////
// test for output to console
	/*
	log4cpp::OstreamAppender* osAppender = new log4cpp::OstreamAppender("osAppender", &std::cout);
	osAppender->setLayout(new log4cpp::BasicLayout());

	log4cpp::Category& root = log4cpp::Category::getRoot();
	root.addAppender(osAppender);

	root.setPriority(log4cpp::Priority::ERROR);
	root.error("Hello log4cpp in aError Message!");
	root.warn("Hello log4cpp in aWarning Message!");
	log4cpp::Category::shutdown();
	//*/

/////////////////////////////////////////////////////////////////////////////////////////
	::system("Pause");
}


/////////////////////////////////////////////////////////////////////////////////////////
// End of file main.cpp
/////////////////////////////////////////////////////////////////////////////////////////