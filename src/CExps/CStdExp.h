/////////////////////////////////////////////////////////////////////////////////////////
//
// File name    : CStdExp.h
// Version      : 0.0.0.0
// Brief        : 
// Author       : v.m.
// Create time  : 2020/01/02 17:59:57
// Modify time  : 2020/01/02 17:59:57
// Note         :
//
/////////////////////////////////////////////////////////////////////////////////////////
//
// Copyright : this file is copyright by v.m.'s tools lib
//
/////////////////////////////////////////////////////////////////////////////////////////
// compile macro definition
#if defined (_MSC_VER) && (_MSC_VER >= 1300)
#pragma once
#endif

#ifndef __CSTDEXP_H__
#define __CSTDEXP_H__

/////////////////////////////////////////////////////////////////////////////////////////
// include file
#ifndef   _EXCEPTION_
#   include <exception>
#endif // _EXCEPTION_

#ifndef   __VM_CFG_H__
#   include <vmCfg.h>_
#endif // __VM_CFG_H__

#ifndef   __CEXP_H__
#	include <vmLibExp/CExp.h>
#endif // __CEXP_H__

/////////////////////////////////////////////////////////////////////////////////////////
// using namespace
namespace vm{

/////////////////////////////////////////////////////////////////////////////////////////
//
// class CStdExp : ## add class brief here ##
//
/////////////////////////////////////////////////////////////////////////////////////////
class DLL_API CStdExp : public CExp
{
/////////////////////////////////////////////////////////////////////////////////////////
// Construct && Destruct
public:
    // Construct define
    explicit CStdExp( const std::exception& coExp,
                      const tchar* const     cpFile, 
                      const unsigned long   culLine,
                      const tchar* const     cpTimeFmt );
    // Destruct define
    virtual ~CStdExp();
    
public:
    // Copy construct define
    CStdExp(const CStdExp& obj);
    // Assignment define
    CStdExp& operator = ( const CStdExp& obj );
    

}; // End of class CStdExp
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : CStdExp(...)
// Brief     :
// Return    : 
// Parameter : const std::exception & coExp
// Parameter : const tchar * const cpFile
// Parameter : const unsigned long culLine
// Parameter : const tchar * const cpTimeFmt
CStdExp::CStdExp(const std::exception& coExp,
    const tchar* const     cpFile,
    const unsigned long   culLine,
    const tchar* const     cpTimeFmt) :CExp(cpFile, culLine, cpTimeFmt)
{
    vCStrPtr(mszMsg) = coExp.what();
}
// End of function CStdExp(...)
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : ~CStdExp(...)
// Brief     :
// Return    : 
CStdExp::~CStdExp()
{

}
// End of function ~CStdExp(...)
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : CStdExp(...)
// Brief     :
// Return    : 
// Parameter : const CStdExp & obj
CStdExp::CStdExp(const CStdExp& obj)
{
    *this = obj;
}
// End of function CStdExp(...)
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : operator=(...)
// Brief     :
// Return    : vm::CStdExp&
// Parameter : const CStdExp & obj
vm::CStdExp& CStdExp::operator=(const CStdExp& obj)
{
    *((CExp*)this) = obj;

    return *this;
}
// End of function operator=(...)
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
} // End of namespace vm
/////////////////////////////////////////////////////////////////////////////////////////
#endif // __CSTDEXP_H__
/////////////////////////////////////////////////////////////////////////////////////////
// usage :
/*

//*/
/////////////////////////////////////////////////////////////////////////////////////////
// End of file CStdExp.h
/////////////////////////////////////////////////////////////////////////////////////////