/////////////////////////////////////////////////////////////////////////////////////////
//
// File name    : CWinFile.cpp
// Version      : 0.0.0.0
// Author       : v.m.
// Brief        : 
// Create time  : 2019/12/30 19:47:25
// Modify time  : 2019/12/30 19:47:25
// Note         :
//
/////////////////////////////////////////////////////////////////////////////////////////
//
// Copyright : this file is copyright by v.m.'s tools lib
//
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Disable warnings :
// Example : #pragma warning(disable:4996)

/////////////////////////////////////////////////////////////////////////////////////////
// Include files :
// Standard c/c++ files included
#include <stdio.h>
#include <stdarg.h>
#include <string.h>
#include <string>

// Config files included
#include <vmCfg.h>

// platform files included
#if defined ( _V_PLATFORM_ ) && ( _V_PLATFORM_ == _V_PF_WIN_ )
#include <windows.h>
#endif // #if defined(...)

// Used files included
#include <vmLibBase/vmUtil.h>

// Declare file included
#include "CFileBase.h"
#include "CWinFile.h"

/////////////////////////////////////////////////////////////////////////////////////////
// using namespace
namespace vm{

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : ~CWinFile(...)
// Brief     : 析构函数
// Return    : null
// Parameter : void
CWinFile::~CWinFile()
{

}
// End of function ~CWinFile(...)
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : CWinFile(...)
// Brief     : 拷贝构造函数
// Return    : null
// Parameter : obj                                  - 拷贝源对象
CWinFile::CWinFile(const CWinFile& obj)
{
    *this = obj;
}
// End of function CWinFile(...)
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : CFile(...)
// Brief     :
// Return    : 
// Parameter : const tChar * cpFName
CFile::CFile(const tChar* cpFName /*= nullptr*/) :CWinFile(cpFName)
{

}
// End of function CFile(...)
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : ~CFile(...)
// Brief     :
// Return    : 
CFile::~CFile()
{

}
// End of function ~CFile(...)
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : CFile(...)
// Brief     :
// Return    : 
// Parameter : const CFile & obj
CFile::CFile(const CFile& obj)
{
    *this = obj;
}
// End of function CFile(...)
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : operator=(...)
// Brief     :
// Return    : vm::CFile&
// Parameter : const CFile & obj
vm::CFile& CFile::operator=(const CFile& obj)
{
    *(CWinFile*)this = obj; return *this;
}
// End of function operator=(...)
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
} // End of namespace vm
/////////////////////////////////////////////////////////////////////////////////////////
// End of file CWinFile.cpp
/////////////////////////////////////////////////////////////////////////////////////////
