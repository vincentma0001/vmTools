/////////////////////////////////////////////////////////////////////////////////////////
//
// File name    : IFile.cpp
// Version      : 0.0.0.0
// Author       : v.m.
// Brief        : 
// Create time  : 2019/12/30 19:41:02
// Modify time  : 2019/12/30 19:41:02
// Note         :
//
/////////////////////////////////////////////////////////////////////////////////////////
//
// Copyright : this file is copyright by v.m.'s tools lib
//
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Disable warnings :
// Example : #pragma warning(disable:4996)

/////////////////////////////////////////////////////////////////////////////////////////
// Include files :
// Standard c/c++ files included
#include <stdio.h>
#include <stdarg.h>
#include <string.h>
#include <string>

// Config files included
#include <vmCfg.h>

// platform files included
#if defined ( _V_PLATFORM_ ) && ( _V_PLATFORM_ == _V_PF_WIN_ )
#include <windows.h>
#endif // #if defined(...)

// Used files included
#include <vmLibBase/vmUtil.h>

// Declare file included
#include "CFileBase.h"

/////////////////////////////////////////////////////////////////////////////////////////
// using namespace
namespace vm{

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : IFile(...)
// Brief     : 构造函数
// Return    : null
// Parameter : void
CFileBase::CFileBase() :mszPath {0x00},mszDriver{0x00},mszDir{0x00},
                        mszFName{0x00},mszExt   {0x00},mulErrCode(0)
{

}
// End of function IFile(...)
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : IFile(...)
// Brief     : 构建函数
// Return    : null
// Parameter : cpFName                      - 文件名，若为NULL则为获取当前进程的文件名
CFileBase::CFileBase(const char* cpFName ) :mszPath {0x00},mszDriver{0x00},mszDir{0x00},
                                            mszFName{0x00},mszExt   {0x00},mulErrCode(0)
{

}
// End of function IFile(...)
/////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////
// Name      : ~IFile(...)
// Brief     : 析构函数
// Return    : null
// Parameter : void
CFileBase::~CFileBase()
{

}
// End of function ~IFile(...)
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : IFile(...)
// Brief     : 拷贝构造函数
// Return    : null
// Parameter : obj                                  - 源拷贝对象
CFileBase::CFileBase(const CFileBase& obj)
{
    *this = obj;
}
// End of function IFile(...)
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : operator=(...)
// Brief     : 赋值操作
// Return    : vm::IFile&                           - 当前对象
// Parameter : obj                                  - 赋值源对象
vm::CFileBase& CFileBase::operator=(const CFileBase& obj)
{
    v_memcpy(mszPath,  sizeof(mszPath),  obj.mszPath,  sizeof(mszPath)   );
    v_memcpy(mszDriver,sizeof(mszDriver),obj.mszDriver,sizeof(mszDriver) );
    v_memcpy(mszDir,   sizeof(mszDir),   obj.mszDir,   sizeof(mszDir)    );
    v_memcpy(mszFName, sizeof(mszFName), obj.mszFName, sizeof(mszFName)  );
    v_memcpy(mszExt,   sizeof(mszExt),   obj.mszExt,   sizeof(mszExt)    );

    mulErrCode = obj.mulErrCode;   
 
    return *this;
}
// End of function operator=(...)
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
} // End of namespace vm
/////////////////////////////////////////////////////////////////////////////////////////
// End of file IFile.cpp
/////////////////////////////////////////////////////////////////////////////////////////
