/////////////////////////////////////////////////////////////////////////////////////////
//
// File name    : CWinFile.h
// Version      : 0.0.0.0
// Brief        : 
// Author       : v.m.
// Create time  : 2019/12/30 16:36:42
// Modify time  : 2019/12/30 16:36:42
// Note         :
//
/////////////////////////////////////////////////////////////////////////////////////////
//
// Copyright : this file is copyright by v.m.'s tools lib
//
/////////////////////////////////////////////////////////////////////////////////////////
// compile macro definition
#if defined (_MSC_VER) && (_MSC_VER >= 1300)
#pragma once
#endif

#ifndef __CWINFILE_H__
#define __CWINFILE_H__

/////////////////////////////////////////////////////////////////////////////////////////
// Include files :

/////////////////////////////////////////////////////////////////////////////////////////
// Include files :
// Standard c/c++ files included

// Config files included
#ifndef   __VM_CFG_H__
#	error this file need #include <vmCfg.h>
#endif // __VM_CFG_H__

// Platform files included

// Used files included
#ifndef   __VM_UTIL_H__
#	error this file need #include <vmLibBase/vmUtil.h>
#endif // __VM_UTIL_H__

#ifndef   __CFILEBASE_H__
#	error this file need #include <vmLibFile/CFileBase.h>
#endif // __CFILEBASE_H__

/////////////////////////////////////////////////////////////////////////////////////////
// using namespace
namespace vm{

/////////////////////////////////////////////////////////////////////////////////////////
//
// class CWinFile : ## add class brief here ##
//
/////////////////////////////////////////////////////////////////////////////////////////
class DLL_API CWinFile : public CFileBase
{
/////////////////////////////////////////////////////////////////////////////////////////
// Construct && Destruct
public:
    // Construct define
    explicit CWinFile(){};
    explicit CWinFile( const tChar* const cpFName )
    {       
    };
 
    // Destruct define
    virtual ~CWinFile();
    
public:
    // Copy construct define
    explicit CWinFile(const CWinFile& obj);
    // Assignment define
    CWinFile& operator = ( const CWinFile& obj ){ return *this; };
    
/////////////////////////////////////////////////////////////////////////////////////////
// members
public:

/////////////////////////////////////////////////////////////////////////////////////////
// Functions 
public:



}; // End of class CWinFile
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
//
// class CFile : ## add class brief here ##
//
/////////////////////////////////////////////////////////////////////////////////////////
class DLL_API CFile : public CWinFile
{
/////////////////////////////////////////////////////////////////////////////////////////
// Construct && Destruct
public:
    // Construct define
    CFile(const tChar* cpFName = nullptr);
    // Destruct define
    virtual ~CFile();

public:
    // Copy construct define
    CFile(const CFile& obj);
    // Assignment define
    CFile& operator = (const CFile& obj);

}; // End of class CFile
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
} // End of namespace vm
/////////////////////////////////////////////////////////////////////////////////////////
#endif // __CWINFILE_H__
/////////////////////////////////////////////////////////////////////////////////////////
// usage :
/*

//*/
/////////////////////////////////////////////////////////////////////////////////////////
// End of file CWinFile.h
/////////////////////////////////////////////////////////////////////////////////////////