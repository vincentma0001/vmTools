/////////////////////////////////////////////////////////////////////////////////////////
//
// File name    : CAtom.cpp
// Version      : 1.0.0.0
// Brief        : 
// Author       : v.m.
// Create time  : 16/2/2016 9:49:10
// Modify time  : 16/2/2016 9:49:10
// Note         : 
//
/////////////////////////////////////////////////////////////////////////////////////////
//
// Copyright : this file is copyright by Julong Co. LTD
//
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// include file
#include "CAtom.h"

/////////////////////////////////////////////////////////////////////////////////////////
// using namespace

/////////////////////////////////////////////////////////////////////////////////////////
// class release 

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : Add
// Full name : CAtom::Add
// Access    : public 
// Brief     : 
// Parameter : long lVal
// Return    : long
// Notes     : 
long CAtom::Add(long lVal)
{
    return ::InterlockedAdd( &mlValue, lVal );
} // End of function Add(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : Change
// Full name : CAtom::Change
// Access    : public 
// Brief     : 
// Parameter : long lVal
// Return    : void
// Notes     : 
void CAtom::Change(long lVal)
{
    return ::InterlockedExchange( &mlValue, lVal );
} // End of function Change(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : Increment
// Full name : CAtom::Increment
// Access    : public 
// Brief     : 
// Parameter : void
// Return    : long
// Notes     : 
long CAtom::Increment(void)
{
    return ::InterlockedIncrement( &mlValue );
} // End of function Increment(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : Decrement
// Full name : CAtom::Decrement
// Access    : public 
// Brief     : 
// Parameter : void
// Return    : long
// Notes     : 
long CAtom::Decrement(void)
{
    return ::InterlockedDecrement( &mlValue );
} // End of function Decrement(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : CompareExchange
// Full name : CAtom::CompareExchange
// Access    : public 
// Brief     : 
// Parameter : long lCompareVal, long lChangeVal
// Return    : long
// Notes     : 
long CAtom::CompareExchange(long lCompareVal, long lChangeVal)
{
    return InterlockedCompareExchange( &mlValue, lChangeVal, lCompareVal );
} // End of function CompareExchange(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : operator()
// Full name : CAtom::operator()
// Access    : public 
// Brief     : 
// Parameter : 
// Return    : long
// Notes     : 
long CAtom::operator()()
{
    return mlValue;
} // End of function operator()(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : operator+
// Full name : CAtom::operator+
// Access    : public 
// Brief     : 
// Parameter : long lVal
// Return    : CAtom&
// Notes     : 
CAtom& CAtom::operator+(long lVal)
{
    ::InterlockedAdd( &mlValue, lVal );
    return *this;
} // End of function operator+(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : operator=
// Full name : CAtom::operator=
// Access    : public 
// Brief     : 
// Parameter : long lVal
// Return    : CAtom&
// Notes     : 
CAtom& CAtom::operator=(long lVal)
{
    ::InterlockedExchange( &mlValue, lVal );
    return *this;
} // End of function operator=(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : operator++
// Full name : CAtom::operator++
// Access    : public 
// Brief     : 
// Parameter : 
// Return    : CAtom&
// Notes     : 
CAtom& CAtom::operator++( void )
{
    ::InterlockedIncrement( &mlValue );
    return *this;
} // End of function operator++(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : operator--
// Full name : CAtom::operator--
// Access    : public 
// Brief     : 
// Parameter : 
// Return    : CAtom&
// Notes     : 
CAtom& CAtom::operator--( void )
{
    ::InterlockedDecrement( &mlValue );
    return *this;
} // End of function operator--(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// End of file CAtom.cpp
/////////////////////////////////////////////////////////////////////////////////////////
