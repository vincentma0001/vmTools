/////////////////////////////////////////////////////////////////////////////////////////
//
// File name 	: CWinCS.h
// Version 		: 0.0.0.1
// Brief 		: 
// Auther 		: v.m.
// Create time 	: 7/12/2015 19:43:30
// Modify time 	: 7/12/2015 19:43:30
// Note 		:
//
/////////////////////////////////////////////////////////////////////////////////////////
//
// Copyright : this file is copyright by Julong LTD
//
/////////////////////////////////////////////////////////////////////////////////////////
// compile macro definition
#if defined (_MSC_VER) && (_MSC_VER >= 1300)
#pragma once
#endif

#ifndef __CWINCS_H__
#define __CWINCS_H__

/////////////////////////////////////////////////////////////////////////////////////////
// include file
#ifndef _WINDOWS_
#   error This file is need windows.h
#endif

/////////////////////////////////////////////////////////////////////////////////////////
//
// class define : CWinCS
//        Notes : this is CRITICAL_SECTION class for windows
//
/////////////////////////////////////////////////////////////////////////////////////////
class CWinCS
{
/////////////////////////////////////////////////////////////////////////////////////////
// class define :
public :
    /////////////////////////////////////////////////////////////////////////////////////
    //
    // class define : Locker
    //        Notes : this is a locker for CWinCS
    //
    /////////////////////////////////////////////////////////////////////////////////////
    class Locker
    {
    /////////////////////////////////////////////////////////////////////////////////////
    // data members :
    private:
        CWinCS& m_cWinCS;
    
    /////////////////////////////////////////////////////////////////////////////////////
    // functions :
    public:
    	explicit Locker( CWinCS &cWinCS );          // Construct define
        ~Locker();                                  // Destruct define
    private:
        Locker(const Locker &rhs);                  // no copy
        Locker &operator=(const Locker &rhs);       // no assignment
    
    }; // End of class Locker
    /////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////
// data members :
private:
    CRITICAL_SECTION m_cWinCS;

/////////////////////////////////////////////////////////////////////////////////////////
// functions : 
public:
#if( WIN32_WINNT  >= 0x0403 )
    CWinCS( DWORD dwSpinCount = 0xFA0 );;			// Construct define
#else
    CWinCS( DWORD dwSpinCount = 0xFA0 );;           // Construct define
#endif	
    ~CWinCS();                                      // Destruct define

private :
    CWinCS(const CWinCS &rhs);                      // no copy
    CWinCS &operator=(const CWinCS &rhs);           // no assignment

public :
#if(_WIN32_WINNT >= 0x0403)
    bool TryEnter();                                
    void SetCSSpinCount( DWORD dwSpinCount = 0xFA0 );
#endif
    void Enter();
    void Leave();

}; // End of class CWinCS
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
#endif // __CWINCS_H__
/////////////////////////////////////////////////////////////////////////////////////////
// End of file CWinCS.h
/////////////////////////////////////////////////////////////////////////////////////////