/////////////////////////////////////////////////////////////////////////////////////////
//
// File name    : CExpTrack.cpp
// Version      : 1.0.0.0
// Brief        : 
// Author       : v.m.
// Create time  : 16/2/2016 13:29:44
// Modify time  : 16/2/2016 13:29:44
// Note         : 
//
/////////////////////////////////////////////////////////////////////////////////////////
//
// Copyright : this file is copyright by Julong Co. LTD
//
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// include file
#include <windows.h>
#include <IOSTREAM>

#include "VerifyDef.h"
#include "CExpTrack.h"

/////////////////////////////////////////////////////////////////////////////////////////

CExpTrack* CSingleton<CExpTrack, CWinCS>::mptInstance = NULL;
CWinCS CSingleton<CExpTrack,CWinCS>::mtMutex;

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : CExpTrack
// Full name : CExpTrack::CExpTrack
// Access    : public 
// Brief     : 
// Parameter : 
// Return    : 
// Notes     : 
CExpTrack::CExpTrack() :mpDump(NULL)
{

} // End of function CExpTrack(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : CExpTrack
// Full name : CExpTrack::CExpTrack
// Access    : public 
// Brief     : 
// Parameter : CAbsDumpImp* pDump
// Return    : 
// Notes     : 
CExpTrack::CExpTrack(CAbsDumpImp* pDump) :mpDump(pDump)
{

} // End of function CExpTrack(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : ~CExpTrack
// Full name : CExpTrack::~CExpTrack
// Access    : virtual public 
// Brief     : 
// Parameter : 
// Return    : 
// Notes     : 
CExpTrack::~CExpTrack()
{
    if ( mpDump != NULL )
    {
        //delete mpDump;
        mpDump = NULL;
    }
} // End of function ~CExpTrack(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : Dump
// Full name : CExpTrack::Dump
// Access    : public 
// Brief     : 
// Parameter : void
// Return    : void
// Notes     : 
void CExpTrack::Dump(void)
{
    if ( mpDump != NULL )
    {
        mpDump->Dump( this );
    }else
    {
        tItor loItor = mlistExp.begin();
        for(;loItor != mlistExp.end(); loItor++ )
        {
            JL::CException& loEx = (*loItor);
            std::cout << loEx.ToString( "[%M:%L] %I" ) << std::endl;
        }
    }
} // End of function Dump(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : SetDump
// Full name : CExpTrack::SetDump
// Access    : public 
// Brief     : 
// Parameter : CAbsDumpImp* pDump
// Return    : void
// Notes     : 
void CExpTrack::SetDump(CAbsDumpImp* pDumpImp)
{
    if ( mpDump!=NULL )
    {
        //delete mpDump;
        mpDump = NULL;
    }

    mpDump = pDumpImp;
} // End of function SetDump(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : Add
// Full name : CExpTrack::Add
// Access    : public 
// Brief     : 
// Parameter : const CException& exp
// Return    : void
// Notes     : 
void CExpTrack::Add(const JL::CException& exp)
{
    mlistExp.push_back( exp );
} // End of function Add(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : clear
// Full name : CExpTrack::clear
// Access    : public 
// Brief     : 
// Parameter : void
// Return    : void
// Notes     : 
void CExpTrack::Clear(void)
{
    mlistExp.clear();
} // End of function clear(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : Begin
// Full name : CExpTrack::Begin
// Access    : public 
// Brief     : 
// Parameter : 
// Return    : CExpTrack::tItor
// Notes     : 
CExpTrack::tItor CExpTrack::Begin()
{
    return mlistExp.begin();
} // End of function Begin(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : End
// Full name : CExpTrack::End
// Access    : public 
// Brief     : 
// Parameter : 
// Return    : CExpTrack::tItor
// Notes     : 
CExpTrack::tItor CExpTrack::End()
{
    return mlistExp.end();
} // End of function End(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// End of file CExpTrack.cpp
/////////////////////////////////////////////////////////////////////////////////////////
