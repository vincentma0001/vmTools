/////////////////////////////////////////////////////////////////////////////////////////
//
// File name    : CWinErr.hpp
// Version      : 0.0.0.0
// Brief        : 
// Author       : v.m.
// Create time  : 2019/12/20 10:05:18
// Modify time  : 2019/12/20 10:05:18
// Note         :
//
/////////////////////////////////////////////////////////////////////////////////////////
//
// Copyright : this file is copyright by v.m.'s tools lib
//
/////////////////////////////////////////////////////////////////////////////////////////
// compile macro definition
#if defined (_MSC_VER) && (_MSC_VER >= 1300)
#pragma once
#endif

#ifndef __CWINERR_HPP__
#define __CWINERR_HPP__

/////////////////////////////////////////////////////////////////////////////////////////
// include lib

/////////////////////////////////////////////////////////////////////////////////////////
// include file

#ifndef   __VM_CFG_H__
#	error this file need #include <vmCfg.h>
#endif // __VM_CFG_H__

#ifndef   _WINDOWS_
#   error this file need #include<windows.h>
#endif // _WINDOWS_

#ifndef   __CERRBASE_H__
#   error this file need #include <CErrBase.h>
#endif // __CERRBASE_H__

/////////////////////////////////////////////////////////////////////////////////////////
// using namespace
namespace vm{

/////////////////////////////////////////////////////////////////////////////////////////
//
// class CWinErr : 此类为Windows系统错误信息解析类
//
/////////////////////////////////////////////////////////////////////////////////////////
class DLL_API CWinErr : public CErrBase
{
/////////////////////////////////////////////////////////////////////////////////////////
// Construct && Destruct
public:
    // Construct define
    explicit CWinErr();
    explicit CWinErr( const unsigned long cuiErrCode );
    // Destruct define
    virtual ~CWinErr();
    
public:
    // Copy define
    CWinErr(const CWinErr& obj);
    // Assignment define
    CWinErr& operator = (const CWinErr& obj);

/////////////////////////////////////////////////////////////////////////////////////////
// Functions :
private:
    // Get error message by system
    virtual tChar* GetErrStr(tChar* pBufAddr, const size_t csztBufSzie, size_t& sztStrLen);

}; // End of class CWinErr
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
//
// class CError : ## add class brief here ##
//
/////////////////////////////////////////////////////////////////////////////////////////
class DLL_API CError : public CWinErr
{
/////////////////////////////////////////////////////////////////////////////////////////
// Construct && Destruct
public:
    // Construct define
    explicit CError();
    explicit CError(const unsigned long culErrCode);
    // Destruct define
    virtual ~CError();

public:
    // No Copy
    CError(const CError& obj);
    // No Assignment
    CError& operator = (const CError& obj);

}; // End of class CError
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
} // End of namespace vm
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
#endif // __CWINERR_H__
/////////////////////////////////////////////////////////////////////////////////////////
// usage :
/*

//*/
/////////////////////////////////////////////////////////////////////////////////////////
// End of file CWinErr.h
/////////////////////////////////////////////////////////////////////////////////////////