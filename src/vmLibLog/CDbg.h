/////////////////////////////////////////////////////////////////////////////////////////
//
// File name    : CDbg.h
// Version      : 0.0.0.0
// Brief        : 
// Author       : v.m.
// Create time  : 2020/01/06 20:17:41
// Modify time  : 2020/01/06 20:17:41
// Note         :
//
/////////////////////////////////////////////////////////////////////////////////////////
//
// Copyright : this file is copyright by v.m.'s tools lib
//
/////////////////////////////////////////////////////////////////////////////////////////
// compile macro definition
#if defined (_MSC_VER) && (_MSC_VER >= 1300)
#pragma once
#endif

#ifndef __CDBG_H__
#define __CDBG_H__

/////////////////////////////////////////////////////////////////////////////////////////
// Include libs  :

/////////////////////////////////////////////////////////////////////////////////////////
// Include files :
// Standard c/c++ files included
#include <stdio.h>
#include <stdarg.h>
#include <stdlib.h>
#include <string.h>

// Config files included
#include <vmCfg.h>

// Platform files included

// Used files included
#include <vmLibBase/CStringPtr.h>
#include <vmLibBase/CDateTime.hpp>
#include <vmLibLog/CLog.h>

/////////////////////////////////////////////////////////////////////////////////////////
// using namespace
namespace vm{

/////////////////////////////////////////////////////////////////////////////////////////
//
// class CDbg : ## add class brief here ##
//
/////////////////////////////////////////////////////////////////////////////////////////
class CDbg : public CLog
{
/////////////////////////////////////////////////////////////////////////////////////////
// Typedefs :

/////////////////////////////////////////////////////////////////////////////////////////
// Construct && Destruct
public:
    // Construct define
    explicit CDbg(){ 
        vCStrPtr(mszLogType) = "DBG";
        vCStrPtr(mszDateTime) = vm::CDateTime<_V_CDATETIME_MAX_BUF_>::GetCurrTime().Fmt(mszDateTimeFmt);};
    // Destruct define
    virtual ~CDbg(){};
    
private:
    // No Copy
    CDbg(const CDbg& obj){};
    // No Assignment
    CDbg& operator = ( const CDbg& obj ){};
   
public:
    void operator()( const tchar* const cpFmt, ... )
    {   
         
    };
/////////////////////////////////////////////////////////////////////////////////////////
// Members :
private:

/////////////////////////////////////////////////////////////////////////////////////////
// Functions :
public:

}; // End of class CDbg
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
} // End of namespace vm
/////////////////////////////////////////////////////////////////////////////////////////
#endif // __CDBG_H__
/////////////////////////////////////////////////////////////////////////////////////////
// usage :
/*

//*/
/////////////////////////////////////////////////////////////////////////////////////////
// End of file CDbg.h
/////////////////////////////////////////////////////////////////////////////////////////