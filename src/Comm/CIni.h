/////////////////////////////////////////////////////////////////////////////////////////
//
// File name 	: CIni.h
// Version 		: 1.0.0.0
// Brief 		: 
// Author 		: v.m.
// Create time 	: 12/4/2016 11:29:00
// Modify time 	: 12/4/2016 11:29:00
// Note 		:
//
/////////////////////////////////////////////////////////////////////////////////////////
//
// Copyright : this file is copyright by Julong Co.LTD
//
/////////////////////////////////////////////////////////////////////////////////////////
// compile macro definition
#if defined (_MSC_VER) && (_MSC_VER >= 1300)
#pragma once
#endif

#ifndef __CINI_H__
#define __CINI_H__

/////////////////////////////////////////////////////////////////////////////////////////
// include file
#ifndef _WINDOWS_
#error this file need include <windows.h>
#endif

#include <string>
#include "CFile.h"

/////////////////////////////////////////////////////////////////////////////////////////
// using namespace

/////////////////////////////////////////////////////////////////////////////////////////
// class release 

/////////////////////////////////////////////////////////////////////////////////////////
// Todo : add application
/////////////////////////////////////////////////////////////////////////////////////////
//
// class define : CIni
//        Notes : ## add class brief here #
//
/////////////////////////////////////////////////////////////////////////////////////////
class CIni
{
/////////////////////////////////////////////////////////////////////////////////////////
// type define :

/////////////////////////////////////////////////////////////////////////////////////////
// data members :
private:
    std::string mstrFileName;
    std::string mstrBuf;


/////////////////////////////////////////////////////////////////////////////////////////
// Construct & Destruct :
public:
    CIni( const char* szFileName ){
        Open( szFileName );
    };		            // Construct define
	virtual ~CIni(){};          // Destruct define

/////////////////////////////////////////////////////////////////////////////////////////
// interface define :

/////////////////////////////////////////////////////////////////////////////////////////
// functions :
public:
    void Open( const char* szFileName )
    {
        JL::CFile loFile;
        std::string lstrBuf = loFile.GetCurrDir();

        mstrFileName = lstrBuf+"\\"+szFileName;
    }
    const char* GetValueStr( const char* szAppName,  const char* szKeyName, const char* szDefaule )
    {

        char szBuf[1024] = {0};
        GetPrivateProfileString(  szAppName, szKeyName, szDefaule, szBuf, sizeof(szBuf), mstrFileName.c_str() );
        mstrBuf = szBuf;
        return mstrBuf.c_str();
    }
    int GetValueInt( const char* szAppName,  const char* szKeyName, const int iDefaule )
    {
        
        int liRet = GetPrivateProfileInt(  szAppName, szKeyName, iDefaule, mstrFileName.c_str() );
        return liRet;
    }
    bool WriteValue( const char* szAppName, const char* szKeyName, const char* szValue )
    {
        BOOL lbRet = ::WritePrivateProfileString( szAppName, szKeyName, szValue, mstrFileName.c_str() );
        return (lbRet==TRUE)?true:false;
    }
//     void WriteValue
//     {
//         ::WritePrivateProfileStruct();
//     }
private:
protected:

}; // End of class CIni
/////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////
#endif // __CINI_H__
/////////////////////////////////////////////////////////////////////////////////////////
// End of file CIni.h
/////////////////////////////////////////////////////////////////////////////////////////