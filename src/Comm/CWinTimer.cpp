/////////////////////////////////////////////////////////////////////////////////////////
//
// File name 	: CTimer.cpp
// Version 		: 1.0.0.0
// Brief 		: 
// Auther 		: v.m.
// Create time 	: 20/9/2016 8:38:53
// Modify time 	: 20/9/2016 8:38:53
// Note 		:
//
/////////////////////////////////////////////////////////////////////////////////////////
//
// Copyright : this file is copyright by Julong Co. LTD
//
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// include file
#include <windows.h>
#include <CException.h>
#include "CWinTimer.h"

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : CWinTimer
// Full name : CWinTimer::CWinTimer
// Access    : private 
// Brief     : 
// Parameter : 
// Return    : 
// Notes     : 
CWinTimer::CWinTimer()
{
	Reset();
} // End of function CWinTimer(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : Start
// Full name : CWinTimer::Start
// Access    : public 
// Brief     : 
// Parameter : 
// Return    : void
// Notes     : 
void CWinTimer::Start()
{
	Reset();
	::QueryPerformanceFrequency( &mliFrequency );
	::QueryPerformanceCounter( &mliStart );
} // End of function Start(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : EndForCount
// Full name : CWinTimer::EndForCount
// Access    : public 
// Brief     : 
// Parameter : 
// Return    : __int64
// Notes     : 
__int64 CWinTimer::EndByCount()
{
	::QueryPerformanceCounter( &mliEnd );
	mi64TimeDiff =  (mliEnd.QuadPart-mliStart.QuadPart);
	return mi64TimeDiff;
} // End of function EndForCount(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : EndForTime
// Full name : CWinTimer::EndForTime
// Access    : public 
// Brief     : 
// Parameter : 
// Return    : __int64
// Notes     : 
__int64 CWinTimer::EndByTime()
{
	::QueryPerformanceCounter( &mliEnd );
	if ( mliFrequency.QuadPart == 0 )
	{
		throw CEXP( "CWinTimer::EndForTime(), the frequency is zero!" );
	}
	mi64TimeDiff =  (mliEnd.QuadPart-mliStart.QuadPart);
	
	return (mi64TimeDiff*1000)/mliFrequency.QuadPart;
} // End of function EndForTime(...
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : Reset
// Full name : CWinTimer::Reset
// Access    : private 
// Brief     : 
// Parameter : 
// Return    : void
// Notes     : 
void CWinTimer::Reset()
{
	mi64TimeDiff = 0;
	memset(&mliFrequency,	0x00,	sizeof(mliFrequency)	);
	memset(&mliStart,		0x00,	sizeof(mliStart)		);
	memset(&mliEnd,			0x00,	sizeof(mliEnd)			);
} // End of function Reset(...
/////////////////////////////////////////////////////////////////////////////////////////




/////////////////////////////////////////////////////////////////////////////////////////
// End of file CTimer.cpp
/////////////////////////////////////////////////////////////////////////////////////////
