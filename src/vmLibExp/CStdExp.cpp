/////////////////////////////////////////////////////////////////////////////////////////
//
// File name    : CStdExp.cpp
// Version      : 0.0.0.0
// Author       : v.m.
// Brief        : 
// Create time  : 2020/01/03 12:41:19
// Modify time  : 2020/01/03 12:41:19
// Note         :
//
/////////////////////////////////////////////////////////////////////////////////////////
//
// Copyright : this file is copyright by v.m.'s tools lib
//
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Disable warnings :
// Example : #pragma warning(disable:4996)

/////////////////////////////////////////////////////////////////////////////////////////
// Include files :
// Standard c/c++ files included
#include <exception>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>

// Config files included
#include <vmCfg.h>

// platform files included
#if defined ( _V_PLATFORM_ ) && ( _V_PLATFORM_ == _V_PF_WIN_ )
#include <windows.h>
#endif // #if defined(...)

// Used files included
#include <vmLibBase/vmUtil.h>
#include <vmLibBase/CStrPtr.h>
#include <vmLibFile.h>

// Declare file included
#include "CExp.h"
#include "CStdExp.h"

/////////////////////////////////////////////////////////////////////////////////////////
// using namespace
namespace vm{

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : CStdExp(...)
// Brief     :
// Return    : 
// Parameter : const std::exception & coExp
// Parameter : const tChar * const cpFile
// Parameter : const unsigned long culLine
// Parameter : const tChar * const cpTimeFmt
CStdExp::CStdExp( const std::exception& coExp, 
                  const tChar* const     cpFile, 
                  const unsigned long   culLine, 
                  const tChar* const     cpTimeFmt) :CExp(cpFile, culLine, cpTimeFmt)
{
    vCStrPtr(mszMsg) = coExp.what();
}
// End of function CStdExp(...)
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : ~CStdExp(...)
// Brief     :
// Return    : 
CStdExp::~CStdExp()
{

}
// End of function ~CStdExp(...)
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : CStdExp(...)
// Brief     :
// Return    : 
// Parameter : const CStdExp & obj
CStdExp::CStdExp(const CStdExp& obj)
{
    *this = obj;
}
// End of function CStdExp(...)
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
// Name      : operator=(...)
// Brief     :
// Return    : vm::CStdExp&
// Parameter : const CStdExp & obj
vm::CStdExp& CStdExp::operator=(const CStdExp& obj)
{
    *((CExp*)this) = obj;

    return *this;
}
// End of function operator=(...)
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
} // End of namespace vm
/////////////////////////////////////////////////////////////////////////////////////////
// End of file CStdExp.cpp
/////////////////////////////////////////////////////////////////////////////////////////
