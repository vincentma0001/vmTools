/////////////////////////////////////////////////////////////////////////////////////////
//
// File name    : CTimeStr.h
// Version      : 0.0.0.0
// Brief        : 
// Author       : v.m.
// Create time  : 2020/01/19 19:37:43
// Modify time  : 2020/01/19 19:37:43
// Note         :
//
/////////////////////////////////////////////////////////////////////////////////////////
//
// Copyright : this file is copyright by v.m.'s tools lib
//
/////////////////////////////////////////////////////////////////////////////////////////
// compile macro definition
#if defined (_MSC_VER) && (_MSC_VER >= 1300)
#pragma once
#endif

#ifndef __CTIMESTR_H__
#define __CTIMESTR_H__

/////////////////////////////////////////////////////////////////////////////////////////
// Include libs  :

/////////////////////////////////////////////////////////////////////////////////////////
// Include files :
// Standard c/c++ files included

// Config files included
#include <vmCfg/vmCfgtString.h>
#include <vmCfg/vmCfgTime.h>

// Platform files included

// Used files included

/////////////////////////////////////////////////////////////////////////////////////////
// using namespace
namespace vm{

/////////////////////////////////////////////////////////////////////////////////////////
//
// class CTimeStr : ## add class brief here ##
//
/////////////////////////////////////////////////////////////////////////////////////////
class CTimeStr
{
/////////////////////////////////////////////////////////////////////////////////////////
// Typedefs :

/////////////////////////////////////////////////////////////////////////////////////////
// Construct && Destruct
public:
    // Construct define
    explicit CTimeStr():mulYear(0),mulMonth(0),mulDay(0),mulHour(0),mulMinute(0),mulSeconde(0),mulMSeconde(0),mulErrCode(0){};
    // Destruct define
    virtual ~CTimeStr(){};
    
private:
    // No Copy
    CTimeStr(const CTimeStr& obj){};
    // No Assignment
    CTimeStr& operator = ( const CTimeStr& obj ){};
    
/////////////////////////////////////////////////////////////////////////////////////////
// Members :

protected:
    unsigned long mulYear;
    unsigned long mulMonth;
    unsigned long mulDay;
    unsigned long mulHour;
    unsigned long mulMinute;
    unsigned long mulSeconde;
    unsigned long mulMSeconde;

private:
    unsigned long mulErrCode;

/////////////////////////////////////////////////////////////////////////////////////////
// Functions :
public:
    bool toTimet( tTimet& stTimet )
    {
        // #  TODO : Add condition brief here ##
        if (mulYear<100)
        {
        	
        } 
        // End of if (mulYear<100) ...  

    }
    bool isYear(){}

}; // End of class CTimeStr
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
} // End of namespace vm
/////////////////////////////////////////////////////////////////////////////////////////
#endif // __CTIMESTR_H__
/////////////////////////////////////////////////////////////////////////////////////////
// usage :
/*

//*/
/////////////////////////////////////////////////////////////////////////////////////////
// End of file CTimeStr.h
/////////////////////////////////////////////////////////////////////////////////////////